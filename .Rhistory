counts <- readRDS('~/OneDrive - University of Southern California/lung_data/rawcounts.rds')
meta <- readRDS('~/OneDrive - University of Southern California/lung_data/GSE151974_cell_metadata_postfilter.csv.gz')
#meta <- read.csv("~/Projects/lung/data/GSE151974_cell_metadata_postfilter.csv.gz")[,-1]
meta <- read.csv('~/OneDrive - University of Southern California/lung_data/GSE151974_cell_metadata_postfilter.csv.gz')
require(SingleCellExperiment)
sce <- SingleCellExperiment(assays = list(counts = counts), colData = meta)
require(scry)
sce <- devianceFeatureSelection(sce)
rm(counts, meta)
gc()
rowData(sce)
sce <- devianceFeatureSelection(sce)
dim(sce)
require(matrixStats)
require(sparseMatrixStats)
sce <- devianceFeatureSelection(sce)
class(counts(sce))
assay(sce,'logcounts') <- log1p(1000*t(t(assay(sce,'counts')) / colSums(assay(sce,'counts'))))
gene.vars <- rowVars(assay(sce,'logcounts'))
gene.use <- which(gene.vars >= sort(gene.vars, decreasing = TRUE)[2000])
require(BiocSingular)
pca <- runPCA(t(assay(sce,'logcounts')[gene.use, ]), rank = 100)
plot((pca$sdev^2/sum(pca$sdev^2))[1:100])
reducedDim(sce,'pca') <- pca$x[,1:25]
rm(pca)
require(uwot)
umap <- umap(reducedDim(sce,'pca'))
plot(umap, asp=1, col = colorby(sce$CellType))
plot(umap, asp=1, col = colorby(factor(sce$CellType)))
plot(umap, asp=1, col = factor(sce$CellType))
points(umap[which(sce$CellType=='AT1'), ], col=3)
points(umap[which(sce$CellType=='AT2 1'), ], col=2)
points(umap[which(sce$CellType=='AT2 2'), ], col='firebrick')
plot(umap, asp=1, col = colorby(sce$CellType))
plot(umap, asp=1, col = sce$CellType)
plot(umap, asp=1, col = factor(sce$CellType))
points(umap[which(sce$CellType=='AT1'), ], col=1)
rm(list=ls())
source('~/mystuff.R')
require(SingleCellExperiment)
#sce <- SingleCellExperiment(assays = list(counts = counts), colData = meta)
#rm(counts, meta)
sce <- readRDS('~/OneDrive - University of Southern California/lung_data/sce.rds')
plot(reducedDim(sce,'umap'), asp=1, col = colorby(sce$CellType))
sce
umap <- umap(reducedDim(sce,'pca'))
plot(umap, asp=1, col = colorby(sce$CellType))
plot(umap, asp=1, col = colorby(assay(sce,'logcounts')[12404, ])) #sftpc
subsce <- sce[, which(sce$CellType %in% c('AT1','AT2 1','AT2 2'))]
subsce <- devianceFeatureSelection(subsce)
gene.use <- which(rowData(subsce)$binomial_deviance >= sort(rowData(subsce)$binomial_deviance, decreasing = TRUE)[1000])
subpca <- runPCA(t(assay(subsce,'logcounts')[gene.use, ]), rank = 500)
plot((subpca$sdev^2/sum(subpca$sdev^2))[1:100])
pairs(subpca$x[,1:3], asp=1, col= colorby(subsce$CellType))
subumap <- umap(subpca$x[,1:20])
plot(subumap, asp=1, col = colorby(subsce$CellType))
lenu(sce$CellType)
plot(umap, asp=1, col = colorby(sce$CellType))
display.brewer.all()
plot(umap, asp=1, col = c(brewer.pal(9,'Set1'),brewer.pal(8,'Set2'),brewer.pal(12,'Set3'),brewer.pal(9,'Pastel1'))[factor(sce$CellType)])
plot(subumap, asp=1, col = colorby(subsce$CellType))
plot(umap, asp=1, col = c(brewer.pal(9,'Set1'),brewer.pal(8,'Set2'),brewer.pal(12,'Set3'),brewer.pal(9,'Pastel1'))[factor(sce$CellType)])
plot(umap, asp=1, col = colorby(assay(sce,'logcounts')[12404, ])) #sftpc
colData(sce)
table(sce$cluster_high_res, sce$CellType)
table(sce$cluster_high_res)
grep('Nkx',rownames(sce))
rownames(sce)[grep('Nkx',rownames(sce))]
plot(umap, asp=1, col = colorby(assay(sce,'logcounts')['Nkx2-1', ]), main='Nkx2.1') #epithelial
plot(umap, asp=1, col = colorby(assay(sce,'logcounts')['Epcam', ]), main='Epcam') #epithelial
subumap <- umap(subpca$x[,1:20])
plot(subumap, asp=1, col = colorby(subsce$CellType))
names(colData(sce))
scd$Ag
scd$Age
sce$Age
table(sce$Age)
grep('Mki',rownames(sce))
rownames(sce)[9540]
plot(subumap, asp=1, col = colorby(assay(subsce,'logcounts')['Mki67,']))
plot(subumap, asp=1, col = colorby(assay(subsce,'logcounts')['Mki67',]))
plot(subumap, asp=1, col = colorby(assay(subsce,'logcounts')['Top2a',]), main='Top2a')
plot(subumap, asp=1, col = colorby(assay(subsce,'logcounts')['Mki67',]), main='Mki67')
plot(subumap, asp=1, col = 'grey80')
points(subumap[which(assay(subsce,'counts')['Mki67',] > 0), ], col = 2)
plot(subumap, asp=1, col = 'grey80')
points(subumap[which(assay(subsce,'counts')['Top2a',] > 0), ], col = 2)
require(SingleCellExperiment)
#sce <- SingleCellExperiment(assays = list(counts = counts), colData = meta)
#rm(counts, meta)
sce <- readRDS('~/OneDrive - University of Southern California/lung_data/sce.rds')
#sce <- SingleCellExperiment(assays = list(counts = counts), colData = meta)
#rm(counts, meta)
sce <- readRDS('~/Downloads/sce.rds')
require(scry)
#assay(sce,'logcounts') <- log1p(1000*t(t(assay(sce,'counts')) / colSums(assay(sce,'counts'))))
gene.use <- which(rowData(sce)$binomial_deviance >= sort(rowData(sce)$binomial_deviance, decreasing = TRUE)[2000])
require(BiocSingular)
sce
require(uwot)
umap <- umap(reducedDim(sce,'pca'))
plot(umap, asp=1, col = colorby(sce$CellType))
plot(umap, asp=1, col = c(brewer.pal(9,'Set1'),brewer.pal(8,'Set2'),brewer.pal(12,'Set3'),brewer.pal(9,'Pastel1'))[factor(sce$CellType)])
plot(umap, asp=1, col = colorby(assay(sce,'logcounts')[12404, ])) #sftpc
plot(umap, asp=1, col = colorby(assay(sce,'logcounts')['Nkx2-1', ]), main='Nkx2.1') #epithelial
plot(umap, asp=1, col = colorby(assay(sce,'logcounts')['Epcam', ]), main='Epcam') #epithelial
points(umap[which(sce$CellType=='AT1'), ], col=3)
points(umap[which(sce$CellType=='AT2 1'), ], col=2)
points(umap[which(sce$CellType=='AT2 2'), ], col='firebrick')
# just AT1 and AT2 cells
#########################
subsce <- sce[, which(sce$CellType %in% c('AT1','AT2 1','AT2 2'))]
subsce <- devianceFeatureSelection(subsce)
gene.use <- which(rowData(subsce)$binomial_deviance >= sort(rowData(subsce)$binomial_deviance, decreasing = TRUE)[1000])
subpca <- runPCA(t(assay(subsce,'logcounts')[gene.use, ]), rank = 100)
plot((subpca$sdev^2/sum(subpca$sdev^2))[1:100])
subumap <- umap(subpca$x[,1:20])
plot(subumap, asp=1, col = colorby(subsce$CellType))
pairs(subpca$x[,1:3], asp=1, col= colorby(factor(subsce$Age, levels = c('P3','P7','P14'))))
pairs(subpca$x[,1:3], asp=1, col= colorby(subsce$CellType))
plot(subumap, asp=1, col = colorby(subsce$CellType))
plot(subumap, asp=1, col = 'grey80')
points(subumap[which(assay(subsce,'counts')['Mki67',] > 0), ], col = 2)
plot(subumap, asp=1, col = 'grey80')
points(subumap[which(assay(subsce,'counts')['Top2a',] > 0), ], col = 2)
pairs(subpca$x[,1:3], asp=1, col= colorby(subsce$CellType))
subsce$CellType
unique(subsce$CellType)
rd <- subpca$x[subsce$CellType %in% c('AT2 1','AT2 2'), 1:3]
cl <- subsce$CellType %in% c('AT2 1','AT2 2')
require(slingshot)
pst <- slingshot(rd, cl)
dim(rd)
length(cl)
cl <- subsce$CellType[subsce$CellType %in% c('AT2 1','AT2 2')]
pst <- slingshot(rd, cl)
plot(subumap, asp=1, col = colorby(subsce$CellType))
slingPseudotime(pst)
points(subumap[subsce$CellType %in% c('AT2 1','AT2 2'), ], col = colorby(slingPseudotime(pst)[,1]))
plot(subpca$x[,1:2], asp=1, col= colorby(subsce$CellType))
points(subpca$x[subsce$CellType %in% c('AT2 1','AT2 2'),1:2], col = colorby(slingPseudotime(pst)[,1]))
plot(rd)
lines(as.SlingshotDataSet(pst),col=2)
plot(rd, asp=1)
lines(as.SlingshotDataSet(pst),col=2)
pst <- slingshot(rd)
lines(as.SlingshotDataSet(pst),col=2)
plot(subpca$x[,1:2], asp=1, col= colorby(subsce$CellType))
points(subpca$x[subsce$CellType %in% c('AT2 1','AT2 2'),1:2], col = colorby(slingPseudotime(pst)[,1]))
plot(subumap, asp=1, col = colorby(subsce$CellType))
points(subumap[subsce$CellType %in% c('AT2 1','AT2 2'), ], col = colorby(slingPseudotime(pst)[,1]))
sce
expr <- assay(subsce,'logcounts')[,subsce$CellType %in% c('AT2 1','AT2 2')]
dim(expr)
rownames(expr)
expr <- expr[rowVars(expr) > 0, ]
dim(expr)
?cor
pstCors <- apply(expr,1,function(g){
cor(g, slingPseudotime(pst)[,1], method='spearman')
})
pstCors[order(abs(pstCors), decreasing = TRUE)]
hist(pstCors)
which.max(abs(pstCors))
plot(subumap, asp=1, col = colorby(subsce$CellType))
points(subumap[subsce$CellType %in% c('AT2 1','AT2 2'), ], col = colorby(slingPseudotime(pst)[,1]))
plot(subumap, asp=1, col = colorby(assay(sce,'logcounts')['Rpl23',]))
plot(slingPseudotime(pst), assay(sce,'logcounts')['Rpl23',])
plot(subumap, asp=1, col = colorby(assay(subsce,'logcounts')['Rpl23',]))
plot(slingPseudotime(pst), assay(sce,'logcounts')['Rpl23',subsce$CellType %in% c('AT2 1','AT2 2')])
slingPseudotime(pst)
length(.Last.value)
plot(slingPseudotime(pst)[,1], assay(subsce,'logcounts')['Rpl23',subsce$CellType %in% c('AT2 1','AT2 2')])
plot(slingPseudotime(pst)[,1], assay(subsce,'logcounts')['Rpl23',subsce$CellType %in% c('AT2 1','AT2 2')])
plot(subumap, asp=1, col = colorby(assay(subsce,'logcounts')['Rpl23',]))
plot(slingPseudotime(pst)[,1], assay(subsce,'logcounts')['Rpl23',subsce$CellType %in% c('AT2 1','AT2 2')])
plot(subumap, asp=1, col = colorby(assay(subsce,'logcounts')['Rpl23',]))
plot(subpca$x[,1:2], asp=1, col= colorby(subsce$CellType))
points(subpca$x[subsce$CellType %in% c('AT2 1','AT2 2'),1:2], col = colorby(slingPseudotime(pst)[,1]))
plot(subpca$x[,1:2], asp=1, col= colorby(subsce$CellType))
points(subpca$x[subsce$CellType %in% c('AT2 1','AT2 2'),1:2], col = colorby(slingPseudotime(pst)[,1]))
plot(slingPseudotime(pst)[,1], assay(subsce,'logcounts')['Rpl23',subsce$CellType %in% c('AT2 1','AT2 2')])
plot(subumap, asp=1, col = colorby(assay(subsce,'logcounts')['Rpl23',]))
plot(subpca$x[,1:2], asp=1, col= colorby(subsce$CellType))
plot(subumap, asp=1, col = colorby(subsce$CellType))
plot(subpca$x[,1:2], asp=1, col= colorby(subsce$CellType))
points(subumap[subsce$CellType %in% c('AT2 1','AT2 2'), ], col = colorby(slingPseudotime(pst)[,1]))
plot(subpca$x[,1:2], asp=1, col= colorby(subsce$CellType))
points(subpca$x[subsce$CellType %in% c('AT2 1','AT2 2'),1:2], col = colorby(slingPseudotime(pst)[,1]))
plot(umap, asp=1, col = colorby(assay(sce,'logcounts')[12404, ])) #sftpc
unique(sce$Age)
hist(assay(sce,'logcounts')[12404, ])
points(umap[which(sce$CellType=='AT1'), ], col=3)
points(umap[which(sce$CellType=='AT2 1'), ], col=2)
points(umap[which(sce$CellType=='AT2 2'), ], col='firebrick')
plot(subpca$x[,1:2], asp=1, col= colorby(subsce$CellType))
pairs(subpca$x[,1:3], asp=1, col= colorby(subsce$CellType))
require(SingleCellExperiment)
#sce <- SingleCellExperiment(assays = list(counts = counts), colData = meta)
#rm(counts, meta)
sce <- readRDS('~/OneDrive - University of Southern California/lung_data/sce.rds')
sce
hyperoxia <- sce
require(DropletUtils)
?read10xCounts
ctrl <- read10xCounts('~/OneDrive - University of Southern California/lung_data/PN14_Ctrl_filtered_feature_bc_matrix/', sample.names = "PN14ctrl")
ctrl
colData(ctrl)
